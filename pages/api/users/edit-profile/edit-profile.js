import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient(); 

import authenticateJWT from '../../protected/authorization';

export default async function handler(req, res) {
    await authenticateJWT(req, res, async () => { // generated by ChatGPT
        if (req.method === "PUT") {
            
            const id  = req.user.id; // generated by ChatGPT

            const { email, avatar, phoneNum } = req.body;

            if (email) {
                const existingEmail = await prisma.user.findUnique({
                    where: { email },
                });
                if (existingEmail) {
                    return res.status(400).json({ error: 'Email already exists' });
                }
            }

            if (phoneNum) {
                const existingPhoneNumber = await prisma.user.findUnique({
                    where: { phoneNum },
                });
                if (existingPhoneNumber) {
                    return res.status(400).json({ error: 'Phone number already exists' });
                }
            }

            const existingUser = await prisma.user.findUnique({
                where: { id },
            });

            const updatedUser = await prisma.user.update({
                where: { id },
                data: {
                    email: email || existingUser.email,
                    avatar: avatar || existingUser.avatar,
                    phoneNum: phoneNum || existingUser.phoneNum,

                },
            });

            return res.status(200).json(updatedUser);

        } else {
            
            res.status(405).json({ message: "Method not allowed" });

        }

    });
}
