{
	"info": {
		"_postman_id": "709b53b0-4d53-423a-a3db-9f9ac4643163",
		"name": "Project Part 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36248263",
		"_collection_link": "https://team22-0541.postman.co/workspace/309-Team-Workspace~dfe9b266-779c-4ceb-9bda-8cfb5cdcb5ac/collection/36248263-709b53b0-4d53-423a-a3db-9f9ac4643163?action=share&source=collection_link&creator=36248263"
	},
	"item": [
		{
			"name": "User 1 Signup",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"danny\",\r\n    \"firstName\": \"Daniel\",\r\n    \"lastName\": \"Kal\",\r\n    \"email\": \"danny@gmail.com\",\r\n    \"password\": \"123\",\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar1.png\", \r\n    \"phoneNum\": \"+123456789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/signup",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"signup"
					]
				},
				"description": "### API Request Description\n\nThis endpoint allows users to sign up by providing their username, first name, last name, email, password, avatar URL, and phone number.\n\n#### Request Body\n\n- `username` (string) - The username of the user.\n    \n- `firstName` (string) - The first name of the user.\n    \n- `lastName` (string) - The last name of the user.\n    \n- `email` (string) - The email address of the user.\n    \n- `password` (string) - The password for the user account.\n    \n- `avatar` (string) - The URL of the user's avatar.\n    \n- `phoneNum` (string) - The phone number of the user.\n    \n\n#### Response Body\n\nThe response body will be in JSON format and will include the following fields:\n\n- `id` (number) - The unique identifier for the user.\n    \n- `username` (string) - The username of the user.\n    \n- `firstName` (string) - The first name of the user.\n    \n- `lastName` (string) - The last name of the user.\n    \n- `email` (string) - The email address of the user.\n    \n- `password` (string) - The password for the user account.\n    \n- `avatar` (string) - The URL of the user's avatar.\n    \n- `phoneNum` (string) - The phone number of the user.\n    \n- `role` (string) - The role of the user.\n    \n\n### JSON Schema for Response\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"number\" },\n    \"username\": { \"type\": \"string\" },\n    \"firstName\": { \"type\": \"string\" },\n    \"lastName\": { \"type\": \"string\" },\n    \"email\": { \"type\": \"string\" },\n    \"password\": { \"type\": \"string\" },\n    \"avatar\": { \"type\": \"string\" },\n    \"phoneNum\": { \"type\": \"string\" },\n    \"role\": { \"type\": \"string\" }\n  }\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"danny\",\r\n    \"firstName\": \"Daniel\",\r\n    \"lastName\": \"Kal\",\r\n    \"email\": \"danny@gmail.com\",\r\n    \"password\": \"123\",\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar1.png\", \r\n    \"phoneNum\": \"+123456789\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"signup"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"16ifuskozv52\""
						},
						{
							"key": "Content-Length",
							"value": "182"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Mon, 04 Nov 2024 01:03:00 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"username\": \"danny\",\n    \"firstName\": \"Daniel\",\n    \"lastName\": \"Kal\",\n    \"email\": \"danny@gmail.com\",\n    \"avatar\": \"http://localhost:3000/avatars/avatar1.png\",\n    \"phoneNum\": \"+123456789\",\n    \"role\": \"USER\"\n}"
				},
				{
					"name": "Error (User already exists)",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"danny\",\r\n    \"firstName\": \"Daniel\",\r\n    \"lastName\": \"Kal\",\r\n    \"email\": \"danny@gmail.com\",\r\n    \"password\": \"123\",\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar1.png\", \r\n    \"phoneNum\": \"+123456789\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"signup"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"m0wqwz9g9iv\""
						},
						{
							"key": "Content-Length",
							"value": "31"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 03:45:14 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"User already exists\"\n}"
				}
			]
		},
		{
			"name": "User 1 Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"if (response.accessToken && response.refreshToken) {\r",
							"    pm.environment.set(\"accessToken\", response.accessToken);\r",
							"    pm.environment.set(\"refreshToken\", response.refreshToken);\r",
							"} else {\r",
							"    console.error(\"Access or Refresh Token missing in response.\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"danny\",\r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"login"
					]
				},
				"description": "The endpoint `POST /api/users/login` is used to authenticate a user and obtain access and refresh tokens.\n\n### Request Body\n\n- The request should include a JSON payload in the raw request body type with the following parameters:\n    \n    - `username` (string): The username of the user.\n        \n    - `password` (string): The password of the user.\n        \n\n### Response\n\nThe response to this request is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"accessToken\": {\n      \"type\": \"string\"\n    },\n    \"refreshToken\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\nThe response will have a status code of 200 and a content type of `application/json`.\n\n#### Example Response\n\n``` json\n{\n  \"accessToken\": \"\",\n  \"refreshToken\": \"\"\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"danny\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"173x19o9hfmda\""
						},
						{
							"key": "Content-Length",
							"value": "478"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 03:40:26 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJkYW5ueSIsInJvbGUiOiJVU0VSIiwiZXhwaXJlc0F0IjoiMTczMDUxODgyNjk2MDNoIiwiaWF0IjoxNzMwNTE4ODI2LCJleHAiOjE3MzA1Mjk2MjZ9.9AWtCCalqIPSF7CBgorxH0ENkBlKoAx9l7dE-s0YJK0\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJkYW5ueSIsInJvbGUiOiJVU0VSIiwiZXhwaXJlc0F0IjoiMTczMDUxODgyNjk2MDNoIiwiaWF0IjoxNzMwNTE4ODI2LCJleHAiOjE3MzA3NzgwMjZ9.Jd3ybt61VJOCx5yM_PCvvojEv-_ISPn2_xFCZhATiVA\"\n}"
				},
				{
					"name": "Error (Invalid Credentials)",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"danny\",\r\n    \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"b59kektjffv\""
						},
						{
							"key": "Content-Length",
							"value": "31"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 03:46:58 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Invalid credentials\"\n}"
				}
			]
		},
		{
			"name": "Refresh Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Refresh token response status is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Access token is returned\", function () {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.property(\"accessToken\");\r",
							"    pm.environment.set(\"accessToken\", response.accessToken);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/refresh",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"refresh"
					]
				},
				"description": "### Refresh User Access Token\n\nThis endpoint is used to refresh the user access token by providing the refresh token.\n\n#### Request Body\n\n- `refreshToken` (string, required): The refresh token used to obtain a new access token.\n    \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n  \"accessToken\": \"string\"\n}\n\n ```\n\n- `accessToken` (string): The new access token obtained after refreshing."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"refresh"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"6q4lm9o76y5j\""
						},
						{
							"key": "Content-Length",
							"value": "199"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 04:09:28 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJkYW5ueSIsInJvbGUiOiJVU0VSIiwiaWF0IjoxNzMwNTIwNTY4LCJleHAiOjE3MzA1MzEzNjh9.gJ0zNwMERCBNRkBp34xVvK9yCTPH398KyIHpIT-yjH0\"\n}"
				}
			]
		},
		{
			"name": "Edit Profile",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"danny@yahoo.com\",\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar2.png\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/edit-profile",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"edit-profile"
					]
				},
				"description": "This endpoint allows the user to update their profile information via an HTTP PUT request. The request should be sent to [http://localhost:3000/api/users/edit-profile](http://localhost:3000/api/users/edit-profile). The request body should be in raw JSON format and include the \"email\" and \"avatar\" fields.\n\n### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\"\n    },\n    \"username\": {\n      \"type\": \"string\"\n    },\n    \"firstName\": {\n      \"type\": \"string\"\n    },\n    \"lastName\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"password\": {\n      \"type\": \"string\"\n    },\n    \"avatar\": {\n      \"type\": \"string\"\n    },\n    \"phoneNum\": {\n      \"type\": \"string\"\n    },\n    \"role\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"danny@yahoo.com\",\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar2.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/edit-profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"edit-profile"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"ucn790ieob74\""
						},
						{
							"key": "Content-Length",
							"value": "256"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 04:16:06 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"username\": \"danny\",\n    \"firstName\": \"Daniel\",\n    \"lastName\": \"Kal\",\n    \"email\": \"danny@yahoo.com\",\n    \"password\": \"$2b$10$g2IVKk5whkGjJzlEr4nbPO.JMHq7BHF5rs7zwibrMImmUmjsA3MQO\",\n    \"avatar\": \"http://localhost:3000/avatars/avatar2.png\",\n    \"phoneNum\": \"+123456789\",\n    \"role\": \"USER\"\n}"
				},
				{
					"name": "Error (Invalid Avatar)",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar4.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/edit-profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"edit-profile"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"4aqv7yi6td6e\""
						},
						{
							"key": "Content-Length",
							"value": "230"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 04:16:49 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Invalid avatar. Choose one of 3 available avatars: http://localhost:3000/avatars/avatar1.png, http://localhost:3000/avatars/avatar2.png, http://localhost:3000/avatars/avatar3.png. You can also choose to have no avatar.\"\n}"
				}
			]
		},
		{
			"name": "Create Template 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Template 1\",\r\n    \"explanation\": \"This is my first template\",\r\n    \"tags\": [\"intro\"],\r\n    \"code\": \"console.log('Hello, World!');\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Template 1\",\r\n    \"explanation\": \"This is my first template\",\r\n    \"tags\": [\"intro\"],\r\n    \"code\": \"console.log('Hello, World!');\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"fscnqzxcnf4p\""
						},
						{
							"key": "Content-Length",
							"value": "169"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 04:56:59 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"title\": \"Template 1\",\n    \"explanation\": \"This is my first template\",\n    \"tags\": \"intro\",\n    \"userId\": 1,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"console.log('Hello, World!');\"\n}"
				}
			]
		},
		{
			"name": "Create Template 2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Template 2\",\r\n    \"explanation\": \"This is my second template.\",\r\n    \"tags\": [\"greeting\", \"hello\"],\r\n    \"code\": \"console.log('Hello again!');\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Template 2\",\r\n    \"explanation\": \"This is my second template.\",\r\n    \"tags\": [\"greeting\", \"hello\"],\r\n    \"code\": \"console.log('Hello again!');\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"11b5uko1s0a4z\""
						},
						{
							"key": "Content-Length",
							"value": "179"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:00:25 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 2,\n    \"title\": \"Template 2\",\n    \"explanation\": \"This is my second template.\",\n    \"tags\": \"greeting,hello\",\n    \"userId\": 1,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"console.log('Hello again!');\"\n}"
				}
			]
		},
		{
			"name": "Create Blog Post 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Blog Post 1\",\r\n    \"description\": \"This is my first blog post.\",\r\n    \"tags\": \"blog, intro\",\r\n    \"linkToTemplates\": [1, 2]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/blogPost",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost"
					]
				},
				"description": "### API Request Description\n\nThis endpoint allows the user to create a new blog post by sending a POST request to the specified URL. The request should include the title, description, tags, and an array of template IDs linked to the blog post.\n\n### Request Body\n\n- title (string): The title of the blog post.\n    \n- description (string): The content or description of the blog post.\n    \n- tags (string): Tags associated with the blog post.\n    \n- linkToTemplates (array of integers): An array of template IDs linked to the blog post.\n    \n\n### Response\n\nThe response will be a JSON object with the following properties:\n\n- id (number): The unique identifier for the blog post.\n    \n- title (string): The title of the blog post.\n    \n- description (string): The content or description of the blog post.\n    \n- tags (string): Tags associated with the blog post.\n    \n- userId (number): The user ID associated with the blog post.\n    \n- rating (number): The rating of the blog post.\n    \n- report (null): A report associated with the blog post, if any.\n    \n- numReports (number): The number of reports for the blog post.\n    \n- hidden (boolean): Indicates if the blog post is hidden.\n    \n- editability (boolean): Indicates if the blog post is editable.\n    \n- linkToTemplates (array): An array of objects containing blogPostId and templateId linked to the blog post.\n    \n\n### JSON Schema for Response\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"number\" },\n    \"title\": { \"type\": \"string\" },\n    \"description\": { \"type\": \"string\" },\n    \"tags\": { \"type\": \"string\" },\n    \"userId\": { \"type\": \"number\" },\n    \"rating\": { \"type\": \"number\" },\n    \"report\": { \"type\": \"null\" },\n    \"numReports\": { \"type\": \"number\" },\n    \"hidden\": { \"type\": \"boolean\" },\n    \"editability\": { \"type\": \"boolean\" },\n    \"linkToTemplates\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"blogPostId\": { \"type\": \"number\" },\n          \"templateId\": { \"type\": \"number\" }\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Blog Post 1\",\r\n    \"description\": \"This is my first blog post.\",\r\n    \"tags\": \"blog, intro\",\r\n    \"linkToTemplates\": [1, 2]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"x3f0cl26147c\""
						},
						{
							"key": "Content-Length",
							"value": "264"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:03:11 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"title\": \"Blog Post 1\",\n    \"description\": \"This is my first blog post.\",\n    \"tags\": \"blog, intro\",\n    \"userId\": 1,\n    \"rating\": 0,\n    \"report\": null,\n    \"numReports\": 0,\n    \"hidden\": false,\n    \"editability\": true,\n    \"linkToTemplates\": [\n        {\n            \"blogPostId\": 1,\n            \"templateId\": 1\n        },\n        {\n            \"blogPostId\": 1,\n            \"templateId\": 2\n        }\n    ]\n}"
				},
				{
					"name": "Error (Title exists)",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Blog Post 1\",\r\n    \"description\": \"This is my first blog post.\",\r\n    \"tags\": \"blog, intro\",\r\n    \"linkToTemplates\": [1, 2]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"jldeuzx8x5w\""
						},
						{
							"key": "Content-Length",
							"value": "32"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:03:57 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Title must be unique\"\n}"
				},
				{
					"name": "Error (Incorrect Template Link)",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Blog Post 2\",\r\n    \"description\": \"This is my first blog post.\",\r\n    \"tags\": \"blog, intro\",\r\n    \"linkToTemplates\": [1, 2, 3]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"wys4rxck6g1l\""
						},
						{
							"key": "Content-Length",
							"value": "57"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:04:46 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Template IDs do not match exisiting Templates\"\n}"
				}
			]
		},
		{
			"name": "Create Blog Post 2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Blog Post 2\",\r\n    \"description\": \"This is my second blog post.\",\r\n    \"tags\": \"blog, cool\",\r\n    \"linkToTemplates\": [1]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/blogPost",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Blog Post 2\",\r\n    \"description\": \"This is my second blog post.\",\r\n    \"tags\": \"blog, cool\",\r\n    \"linkToTemplates\": [1]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"ix9a9zvhjf6g\""
						},
						{
							"key": "Content-Length",
							"value": "232"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:07:25 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 2,\n    \"title\": \"Blog Post 2\",\n    \"description\": \"This is my second blog post.\",\n    \"tags\": \"blog, cool\",\n    \"userId\": 1,\n    \"rating\": 0,\n    \"report\": null,\n    \"numReports\": 0,\n    \"hidden\": false,\n    \"editability\": true,\n    \"linkToTemplates\": [\n        {\n            \"blogPostId\": 2,\n            \"templateId\": 1\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "User 2 Signup",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"john\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Johnson\",\r\n    \"email\": \"john@gmail.com\",\r\n    \"password\": \"123\",\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar3.png\", \r\n    \"phoneNum\": \"+1 (647) 234-567\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/signup",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"signup"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"john\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Johnson\",\r\n    \"email\": \"john@gmail.com\",\r\n    \"password\": \"123\",\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar3.png\", \r\n    \"phoneNum\": \"+1 (647) 234-567\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"signup"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"o2fw5riqmw58\""
						},
						{
							"key": "Content-Length",
							"value": "188"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Mon, 04 Nov 2024 01:04:12 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 2,\n    \"username\": \"john\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Johnson\",\n    \"email\": \"john@gmail.com\",\n    \"avatar\": \"http://localhost:3000/avatars/avatar3.png\",\n    \"phoneNum\": \"+1 (647) 234-567\",\n    \"role\": \"USER\"\n}"
				}
			]
		},
		{
			"name": "User 2 Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.environment.set(\"accessToken\", response.accessToken);\r",
							"pm.environment.set(\"refreshToken\", response.refreshToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"john\",  \r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"john\",  \r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"12x0ihazy11d8\""
						},
						{
							"key": "Content-Length",
							"value": "476"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:14:26 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJqb2huIiwicm9sZSI6IlVTRVIiLCJleHBpcmVzQXQiOiIxNzMwNTI0NDY2MDI2M2giLCJpYXQiOjE3MzA1MjQ0NjYsImV4cCI6MTczMDUzNTI2Nn0.wejKuMgUZPmkx6UMWQzFOku0Z_wHCRu4irtTWkmpJZ0\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJqb2huIiwicm9sZSI6IlVTRVIiLCJleHBpcmVzQXQiOiIxNzMwNTI0NDY2MDI2M2giLCJpYXQiOjE3MzA1MjQ0NjYsImV4cCI6MTczMDc4MzY2Nn0.L8RKAb3tVpkjf5-GILdOEFlU82Yw18284-fcWDUcSiU\"\n}"
				}
			]
		},
		{
			"name": "Create Blog Post 3",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"New Blog\",\r\n    \"description\": \"I like Template 1 very much!\",\r\n    \"tags\": \"blog, template\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/blogPost",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost"
					]
				},
				"description": "# Create a New Blog Post\n\nThis endpoint allows you to create a new blog post.\n\n## Request Body\n\n- title (string, required): The title of the blog post.\n    \n- description (string, required): The content or description of the blog post.\n    \n- tags (string, required): Tags associated with the blog post.\n    \n\nExample:\n\n``` json\n{\n  \"title\": \"New Blog\",\n  \"description\": \"I like Template 1 very much!\",\n  \"tags\": \"blog, template\"\n}\n\n ```\n\n## Response\n\n- id (number): The unique identifier for the blog post.\n    \n- title (string): The title of the blog post.\n    \n- description (string): The content or description of the blog post.\n    \n- tags (string): Tags associated with the blog post.\n    \n- userId (number): The user ID associated with the blog post.\n    \n- rating (number): The rating of the blog post.\n    \n- report (string): Report details, if any.\n    \n- numReports (number): Number of reports received for the blog post.\n    \n- hidden (boolean): Indicates if the blog post is hidden.\n    \n- editability (boolean): Indicates if the blog post is editable.\n    \n- linkToTemplates (array): Array of template links associated with the blog post.\n    \n\nExample Response:\n\n``` json\n{\n  \"id\": 0,\n  \"title\": \"\",\n  \"description\": \"\",\n  \"tags\": \"\",\n  \"userId\": 0,\n  \"rating\": 0,\n  \"report\": null,\n  \"numReports\": 0,\n  \"hidden\": true,\n  \"editability\": true,\n  \"linkToTemplates\": []\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"New Blog\",\r\n    \"description\": \"I like Template 1 very much!\",\r\n    \"tags\": \"blog, template\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"85nud5e7hp5m\""
						},
						{
							"key": "Content-Length",
							"value": "202"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:17:34 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"title\": \"New Blog\",\n    \"description\": \"I like Template 1 very much!\",\n    \"tags\": \"blog, template\",\n    \"userId\": 2,\n    \"rating\": 0,\n    \"report\": null,\n    \"numReports\": 0,\n    \"hidden\": false,\n    \"editability\": true,\n    \"linkToTemplates\": []\n}"
				}
			]
		},
		{
			"name": "Update Blog Post 3",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Updated New Blog\",\r\n    \"tags\": \"blog, template, update\",\r\n    \"linkToTemplates\": [2]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/blogPost/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"3"
					]
				},
				"description": "### Update Blog Post\n\nThis endpoint allows the user to update an existing blog post.\n\n#### Request Body\n\n- title (string, required): The updated title of the blog post.\n    \n- tags (string, required): The updated tags for the blog post.\n    \n- linkToTemplates (array of numbers, required): The updated list of template IDs linked to the blog post.\n    \n\nExample:\n\n``` json\n{\n    \"title\": \"Updated New Blog\",\n    \"tags\": \"blog, template, update\",\n    \"linkToTemplates\": [2]\n}\n\n ```\n\n#### Response\n\nThe response for this request can be represented using the following JSON schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\"type\": \"number\"},\n        \"title\": {\"type\": \"string\"},\n        \"description\": {\"type\": \"string\"},\n        \"tags\": {\"type\": \"string\"},\n        \"userId\": {\"type\": \"number\"},\n        \"rating\": {\"type\": \"number\"},\n        \"report\": {\"type\": [\"string\", \"null\"]},\n        \"numReports\": {\"type\": \"number\"},\n        \"hidden\": {\"type\": \"boolean\"},\n        \"editability\": {\"type\": \"boolean\"},\n        \"linkToTemplates\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"blogPostId\": {\"type\": \"number\"},\n                    \"templateId\": {\"type\": \"number\"}\n                }\n            }\n        }\n    }\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Updated New Blog\",\r\n    \"tags\": \"blog, template, update\",\r\n    \"linkToTemplates\": [2]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"10t0vdih7a86x\""
						},
						{
							"key": "Content-Length",
							"value": "249"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:40:14 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"title\": \"Updated New Blog\",\n    \"description\": \"I like Template 1 very much!\",\n    \"tags\": \"blog, template, update\",\n    \"userId\": 2,\n    \"rating\": 0,\n    \"report\": null,\n    \"numReports\": 0,\n    \"hidden\": false,\n    \"editability\": true,\n    \"linkToTemplates\": [\n        {\n            \"blogPostId\": 3,\n            \"templateId\": 2\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Update Blog Post 2 Attempt",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Updated Description\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/blogPost/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"2"
					]
				}
			},
			"response": [
				{
					"name": "Error (Not Author)",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Updated Description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"2"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"14knj5ctnrf16\""
						},
						{
							"key": "Content-Length",
							"value": "42"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:43:59 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"You cannot edit this blog post\"\n}"
				}
			]
		},
		{
			"name": "Upvote Blog Post 3",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vote\": \"upvote\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/blogPost/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"3"
					]
				},
				"description": "### Update Blog Post Vote\n\nThis endpoint is used to update the vote for a specific blog post.\n\n#### Request\n\n- Method: PATCH\n    \n- Endpoint: `http://localhost:3000/api/blogPost/3`\n    \n- { \"vote\": \"upvote\"}\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"integer\" },\n    \"title\": { \"type\": \"string\" },\n    \"description\": { \"type\": \"string\" },\n    \"tags\": { \"type\": \"string\" },\n    \"userId\": { \"type\": \"integer\" },\n    \"rating\": { \"type\": \"integer\" },\n    \"report\": { \"type\": \"string\" },\n    \"numReports\": { \"type\": \"integer\" },\n    \"hidden\": { \"type\": \"boolean\" },\n    \"editability\": { \"type\": \"boolean\" },\n    \"upvotedByUsers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"integer\" },\n          \"username\": { \"type\": \"string\" },\n          \"firstName\": { \"type\": \"string\" },\n          \"lastName\": { \"type\": \"string\" },\n          \"email\": { \"type\": \"string\" },\n          \"password\": { \"type\": \"string\" },\n          \"avatar\": { \"type\": \"string\" },\n          \"phoneNum\": { \"type\": \"string\" },\n          \"role\": { \"type\": \"string\" }\n        }\n      }\n    },\n    \"downvotedByUsers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"integer\" },\n          \"username\": { \"type\": \"string\" },\n          \"firstName\": { \"type\": \"string\" },\n          \"lastName\": { \"type\": \"string\" },\n          \"email\": { \"type\": \"string\" },\n          \"password\": { \"type\": \"string\" },\n          \"avatar\": { \"type\": \"string\" },\n          \"phoneNum\": { \"type\": \"string\" },\n          \"role\": { \"type\": \"string\" }\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": [
				{
					"name": "Rating goes up to 1",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vote\": \"upvote\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"17wb345hpw8dx\""
						},
						{
							"key": "Content-Length",
							"value": "501"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:45:37 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"title\": \"Updated New Blog\",\n    \"description\": \"I like Template 1 very much!\",\n    \"tags\": \"blog, template, update\",\n    \"userId\": 2,\n    \"rating\": 1,\n    \"report\": null,\n    \"numReports\": 0,\n    \"hidden\": false,\n    \"editability\": true,\n    \"upvotedByUsers\": [\n        {\n            \"id\": 2,\n            \"username\": \"john\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Johnson\",\n            \"email\": \"john@gmail.com\",\n            \"password\": \"$2b$10$N/.CCKP.ah1faRyLHl7pguD0HcuW3ZMxwatTOKM1ZVWzyElC3l7XS\",\n            \"avatar\": \"http://localhost:3000/avatars/avatar3.png\",\n            \"phoneNum\": \"+1 (647) 234-567\",\n            \"role\": \"USER\"\n        }\n    ],\n    \"downvotedByUsers\": []\n}"
				}
			]
		},
		{
			"name": "Upvote Blog Post 3",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vote\": \"upvote\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/blogPost/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"3"
					]
				}
			},
			"response": [
				{
					"name": "Rating back to 0",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vote\": \"upvote\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"dz70akku196n\""
						},
						{
							"key": "Content-Length",
							"value": "239"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:48:54 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"title\": \"Updated New Blog\",\n    \"description\": \"I like Template 1 very much!\",\n    \"tags\": \"blog, template, update\",\n    \"userId\": 2,\n    \"rating\": 0,\n    \"report\": null,\n    \"numReports\": 0,\n    \"hidden\": false,\n    \"editability\": true,\n    \"upvotedByUsers\": [],\n    \"downvotedByUsers\": []\n}"
				}
			]
		},
		{
			"name": "Downvote Blog Post 3",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vote\": \"downvote\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/blogPost/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"3"
					]
				}
			},
			"response": [
				{
					"name": "Rating goes down to -1",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"vote\": \"downvote\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/blogPost/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"gqbbxcxwghdy\""
						},
						{
							"key": "Content-Length",
							"value": "502"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Nov 2024 05:52:07 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"title\": \"Updated New Blog\",\n    \"description\": \"I like Template 1 very much!\",\n    \"tags\": \"blog, template, update\",\n    \"userId\": 2,\n    \"rating\": -1,\n    \"report\": null,\n    \"numReports\": 0,\n    \"hidden\": false,\n    \"editability\": true,\n    \"upvotedByUsers\": [],\n    \"downvotedByUsers\": [\n        {\n            \"id\": 2,\n            \"username\": \"john\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Johnson\",\n            \"email\": \"john@gmail.com\",\n            \"password\": \"$2b$10$N/.CCKP.ah1faRyLHl7pguD0HcuW3ZMxwatTOKM1ZVWzyElC3l7XS\",\n            \"avatar\": \"http://localhost:3000/avatars/avatar3.png\",\n            \"phoneNum\": \"+1 (647) 234-567\",\n            \"role\": \"USER\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "User 1 Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.environment.set(\"accessToken\", response.accessToken);\r",
							"pm.environment.set(\"refreshToken\", response.refreshToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"danny\",\r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"danny\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"6uosdmghm2da\""
						},
						{
							"key": "Content-Length",
							"value": "478"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 15:35:12 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJkYW5ueSIsInJvbGUiOiJVU0VSIiwiZXhwaXJlc0F0IjoiMTczMDY0ODExMjIwMDNoIiwiaWF0IjoxNzMwNjQ4MTEyLCJleHAiOjE3MzA2NTg5MTJ9.I0-m3nwBGSjdA3MmmnTnv6zdCfgBbFvUJ3Vqvo0dvOA\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidXNlcm5hbWUiOiJkYW5ueSIsInJvbGUiOiJVU0VSIiwiZXhwaXJlc0F0IjoiMTczMDY0ODExMjIwMDNoIiwiaWF0IjoxNzMwNjQ4MTEyLCJleHAiOjE3MzA5MDczMTJ9.SxnA9F5gO82748CGowPkCzFGBfKNpvvlcFKfecKcXEA\"\n}"
				}
			]
		},
		{
			"name": "Get Blog Post 1's Comments",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/comments?postId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "1"
						}
					]
				},
				"description": "### /api/comments\n\nThis endpoint is a GET request to retrieve comments based on the postId parameter.\n\n#### Request Parameters\n\n- postId (number): The ID of the post for which comments are being retrieved.\n    \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n    \"comments\": [],\n    \"page\": 0,\n    \"limit\": 0\n}\n\n ```\n\nThe \"comments\" key will contain an array of comments, while \"page\" and \"limit\" will provide pagination information.\n\n### /api/users/login\n\nThis endpoint is used to authenticate a user and obtain access and refresh tokens.\n\n#### Allowed Methods\n\n- POST\n    \n\n#### Request Body\n\nThe request should include a JSON payload in the raw request body type with the following parameters:\n\n- username (string): The username of the user.\n    \n- { \"username\": \"danny\", \"password\": \"123\"}\n    \n\n#### Response\n\nThe response will have a status code of 200 and a content type of application/json. It will contain an access token and a refresh token in the following format:\n\n``` json\n{\n    \"accessToken\": \"<access_token>\",\n    \"refreshToken\": \"<refresh_token>\"\n}\n\n ```\n\n### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n    \"comments\": array,\n    \"page\": number,\n    \"limit\": number\n}\n\n ```\n\nThe `comments` field is an array containing the comments associated with the specified post. The `page` field indicates the current page number of the comments, and the `limit` field specifies the maximum number of comments per page."
			},
			"response": [
				{
					"name": "Success (no comments)",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/comments?postId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments"
							],
							"query": [
								{
									"key": "postId",
									"value": "1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"z8ykm5j6d8z\""
						},
						{
							"key": "Content-Length",
							"value": "35"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 02:06:42 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"comments\": [],\n    \"page\": 1,\n    \"limit\": 10\n}"
				}
			]
		},
		{
			"name": "Get Blog Post 950's Comments",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/comments?postId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "1"
						}
					]
				}
			},
			"response": [
				{
					"name": "Error (Not Found)",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/comments?postId=950",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments"
							],
							"query": [
								{
									"key": "postId",
									"value": "950"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"aoyocjkqb1x\""
						},
						{
							"key": "Content-Length",
							"value": "33"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 02:08:27 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Blog Post not found\"\n}"
				}
			]
		},
		{
			"name": "Post Comment on Blog Post 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"postId\": 1,\n    \"body\": \"Great post!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments"
					]
				},
				"description": "### POST /api/comments\n\nThis endpoint allows the user to submit a comment for a specific post.\n\n#### Request Body\n\n- postId (Number): The ID of the post for which the comment is being submitted.\n    \n- body (String): The content of the comment.\n    \n\n#### Response\n\nThe response will be in the form of a JSON object with the following properties:\n\n- id (Number): The unique identifier for the comment.\n    \n- postId (Number): The ID of the post for which the comment was submitted.\n    \n- userId (Number): The ID of the user who submitted the comment.\n    \n- body (String): The content of the comment.\n    \n- numReports (Number): The number of reports received for the comment.\n    \n- rating (Number): The rating of the comment.\n    \n- hidden (Boolean): Indicates whether the comment is hidden or not.\n    \n- parentCommentId (Number or null): The ID of the parent comment, if any.\n    \n- createdAt (String): The timestamp when the comment was created.\n    \n\n#### JSON Schema for Response\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"number\" },\n    \"postId\": { \"type\": \"number\" },\n    \"userId\": { \"type\": \"number\" },\n    \"body\": { \"type\": \"string\" },\n    \"numReports\": { \"type\": \"number\" },\n    \"rating\": { \"type\": \"number\" },\n    \"hidden\": { \"type\": \"boolean\" },\n    \"parentCommentId\": { \"type\": [\"number\", \"null\"] },\n    \"createdAt\": { \"type\": \"string\" }\n  }\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": 1,\n    \"body\": \"Great post!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"4bc5a6gwg74a\""
						},
						{
							"key": "Content-Length",
							"value": "154"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 02:19:40 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"postId\": 1,\n    \"userId\": 1,\n    \"body\": \"Great post!\",\n    \"numReports\": 0,\n    \"rating\": 0,\n    \"hidden\": false,\n    \"parentCommentId\": null,\n    \"createdAt\": \"2024-11-03T02:19:40.447Z\"\n}"
				}
			]
		},
		{
			"name": "Post Reply to Comment on Blog Post 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"postId\": 1,\n    \"body\": \"I agree 100%!\",\n    \"parentCommentId\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": 1,\n    \"body\": \"I agree 100%!\",\n    \"parentCommentId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"85hb2sgtpw49\""
						},
						{
							"key": "Content-Length",
							"value": "153"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 02:25:31 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 2,\n    \"postId\": 1,\n    \"userId\": 1,\n    \"body\": \"I agree 100%!\",\n    \"numReports\": 0,\n    \"rating\": 0,\n    \"hidden\": false,\n    \"parentCommentId\": 1,\n    \"createdAt\": \"2024-11-03T02:25:31.604Z\"\n}"
				}
			]
		},
		{
			"name": "Update Reply on Blog Post 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"body\": \"Love this!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/comments/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments",
						"2"
					]
				},
				"description": "This endpoint makes an HTTP PUT request to update a specific comment with the provided ID. The request body should contain the updated \"body\" of the comment.\n\n### Response\n\nThe response for this request is a JSON object with the following schema:\n\n- id (number): The unique identifier of the comment.\n    \n- postId (number): The ID of the post to which the comment belongs.\n    \n- userId (number): The ID of the user who made the comment.\n    \n- body (string): The updated body of the comment.\n    \n- numReports (number): The number of reports received for the comment.\n    \n- rating (number): The rating of the comment.\n    \n- hidden (boolean): Indicates whether the comment is hidden or not.\n    \n- parentCommentId (number): The ID of the parent comment, if any.\n    \n- createdAt (string): The timestamp when the comment was created.\n    \n\nThis schema can be used to validate the structure of the response object received after making the PUT request."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Love this!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments",
								"2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"4hkmwlpkqs46\""
						},
						{
							"key": "Content-Length",
							"value": "150"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 02:44:27 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 2,\n    \"postId\": 1,\n    \"userId\": 1,\n    \"body\": \"Love this!\",\n    \"numReports\": 0,\n    \"rating\": 0,\n    \"hidden\": false,\n    \"parentCommentId\": 1,\n    \"createdAt\": \"2024-11-03T02:25:31.604Z\"\n}"
				}
			]
		},
		{
			"name": "Post Comment on Blog Post 2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"postId\": 2,\n    \"body\": \"Lovr this!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"postId\": 2,\n    \"body\": \"Lovr this!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/comments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"ia0kc6lhn749\""
						},
						{
							"key": "Content-Length",
							"value": "153"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 02:38:24 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"postId\": 2,\n    \"userId\": 1,\n    \"body\": \"Lovr this!\",\n    \"numReports\": 0,\n    \"rating\": 0,\n    \"hidden\": false,\n    \"parentCommentId\": null,\n    \"createdAt\": \"2024-11-03T02:38:24.575Z\"\n}"
				}
			]
		},
		{
			"name": "Delete Comment on Blog Post 2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/comments/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments",
						"3"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/comments/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments",
								"3"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 02:49:47 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Upvote Comment on Blog Post 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"vote\": \"upvote\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/comments/1/vote",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments",
						"1",
						"vote"
					]
				},
				"description": "### Vote Comment\n\nThis endpoint allows users to vote on a specific comment.\n\n#### Request Body\n\n- `vote` (string, required): The type of vote, can be either \"upvote\" or \"downvote\".\n    \n\n#### Response\n\nThe response will be a JSON object with the following properties:\n\n- `id` (number): The unique identifier of the comment.\n    \n- `postId` (number): The identifier of the post the comment belongs to.\n    \n- `userId` (number): The identifier of the user who posted the comment.\n    \n- `body` (string): The content of the comment.\n    \n- `numReports` (number): The number of reports the comment has received.\n    \n- `rating` (number): The rating score of the comment.\n    \n- `hidden` (boolean): Indicates if the comment is hidden.\n    \n- `parentCommentId` (number): The identifier of the parent comment, if it's a reply.\n    \n- `createdAt` (string): The timestamp of when the comment was created.\n    \n\n#### JSON Schema\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": { \"type\": \"number\" },\n    \"postId\": { \"type\": \"number\" },\n    \"userId\": { \"type\": \"number\" },\n    \"body\": { \"type\": \"string\" },\n    \"numReports\": { \"type\": \"number\" },\n    \"rating\": { \"type\": \"number\" },\n    \"hidden\": { \"type\": \"boolean\" },\n    \"parentCommentId\": { \"type\": [\"number\", \"null\"] },\n    \"createdAt\": { \"type\": \"string\" }\n  }\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vote\": \"upvote\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/comments/1/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments",
								"1",
								"vote"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"ku5hc0tyfo4a\""
						},
						{
							"key": "Content-Length",
							"value": "154"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 02:58:48 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"postId\": 1,\n    \"userId\": 1,\n    \"body\": \"Great post!\",\n    \"numReports\": 0,\n    \"rating\": 1,\n    \"hidden\": false,\n    \"parentCommentId\": null,\n    \"createdAt\": \"2024-11-03T02:19:40.447Z\"\n}"
				}
			]
		},
		{
			"name": "Upvote Comment on Blog Post 1 Attempt",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"vote\": \"upvote\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/comments/1/vote",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments",
						"1",
						"vote"
					]
				}
			},
			"response": [
				{
					"name": "Error (Already upvoted)",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vote\": \"upvote\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/comments/1/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments",
								"1",
								"vote"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"100qs3ew06m1g\""
						},
						{
							"key": "Content-Length",
							"value": "52"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 03:00:19 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User has already voted on this comment\"\n}"
				}
			]
		},
		{
			"name": "Downvote Comment on Blog Post 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"vote\": \"downvote\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/comments/1/vote",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"comments",
						"1",
						"vote"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vote\": \"downvote\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/comments/1/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"comments",
								"1",
								"vote"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"4bc5a6gwg74a\""
						},
						{
							"key": "Content-Length",
							"value": "154"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 03:02:25 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"postId\": 1,\n    \"userId\": 1,\n    \"body\": \"Great post!\",\n    \"numReports\": 0,\n    \"rating\": 0,\n    \"hidden\": false,\n    \"parentCommentId\": null,\n    \"createdAt\": \"2024-11-03T02:19:40.447Z\"\n}"
				}
			]
		},
		{
			"name": "Report Reply on Blog Post 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"contentId\": 2,\n    \"contentType\": \"comment\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/reports",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reports"
					]
				},
				"description": "This endpoint allows you to create reports by making an HTTP POST request to the specified URL.\n\nThe request body should be in raw format and include the following parameters:\n\n- contentId (Number): The ID of the content being reported.\n    \n- contentType (String): The type of content being reported.\n    \n\nAn example of the response for this request is as follows:\n\n``` json\n{\n  \"id\": 0,\n  \"blogPostId\": null,\n  \"commentId\": 0,\n  \"contentType\": \"\",\n  \"explanation\": null,\n  \"createdAt\": \"\",\n  \"userId\": 0\n}\n\n ```\n\nHere is the JSON schema for the response:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"number\"\n    },\n    \"blogPostId\": {\n      \"type\": [\"number\", \"null\"]\n    },\n    \"commentId\": {\n      \"type\": \"number\"\n    },\n    \"contentType\": {\n      \"type\": \"string\"\n    },\n    \"explanation\": {\n      \"type\": [\"string\", \"null\"]\n    },\n    \"createdAt\": {\n      \"type\": \"string\"\n    },\n    \"userId\": {\n      \"type\": \"number\"\n    }\n  }\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contentId\": 2,\n    \"contentType\": \"comment\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/reports",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"reports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"9or5y7f60v3p\""
						},
						{
							"key": "Content-Length",
							"value": "133"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 03:11:37 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"blogPostId\": null,\n    \"commentId\": 2,\n    \"contentType\": \"comment\",\n    \"explanation\": null,\n    \"createdAt\": \"2024-11-03T03:11:37.801Z\",\n    \"userId\": 1\n}"
				}
			]
		},
		{
			"name": "Admin Sign Up",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admin\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"Person\",\n    \"email\": \"admin@uoft.com\",\n    \"password\": \"123\",\n    \"avatar\": \"http://localhost:3000/avatars/avatar3.png\", \n    \"phoneNum\": \"+987654321\",\n    \"role\": \"ADMIN\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/signup",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"signup"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"Person\",\n    \"email\": \"admin@uoft.com\",\n    \"password\": \"123\",\n    \"avatar\": \"http://localhost:3000/avatars/avatar3.png\", \n    \"phoneNum\": \"+987654321\",\n    \"role\": \"ADMIN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"signup"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"altn02witm54\""
						},
						{
							"key": "Content-Length",
							"value": "184"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 22:12:25 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"username\": \"admin\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"Person\",\n    \"email\": \"admin@uoft.com\",\n    \"avatar\": \"http://localhost:3000/avatars/avatar3.png\",\n    \"phoneNum\": \"+987654321\",\n    \"role\": \"ADMIN\"\n}"
				}
			]
		},
		{
			"name": "Admin Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"pm.environment.set(\"accessToken\", response.accessToken);",
							"pm.environment.set(\"refreshToken\", response.refreshToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"14p4syxije5de\""
						},
						{
							"key": "Content-Length",
							"value": "482"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 22:15:05 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOiJBRE1JTiIsImV4cGlyZXNBdCI6IjE3MzA2NzIxMDUwMDczaCIsImlhdCI6MTczMDY3MjEwNSwiZXhwIjoxNzMwNjgyOTA1fQ.wzraLz99OO8pWytlbrE7cRoCWhxHB6CX-c7Glgmgtfg\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiJhZG1pbiIsInJvbGUiOiJBRE1JTiIsImV4cGlyZXNBdCI6IjE3MzA2NzIxMDUwMDczaCIsImlhdCI6MTczMDY3MjEwNSwiZXhwIjoxNzMwOTMxMzA1fQ.auKb8_4aE88sFpmlFlBMj-SUPLHvLCkMnE1m0vFX87Y\"\n}"
				}
			]
		},
		{
			"name": "View the Reported Comments as Admin",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/admin/reports?contentType=comment&sortByReports=true",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"reports"
					],
					"query": [
						{
							"key": "contentType",
							"value": "comment"
						},
						{
							"key": "sortByReports",
							"value": "true"
						}
					]
				},
				"description": "### Get Admin Reports\n\nThis endpoint makes an HTTP GET request to retrieve admin reports based on the specified content type and sorting criteria.\n\n#### Request Parameters\n\n- `contentType` (query parameter) - Specifies the type of content for which reports are requested.\n    \n- `sortByReports` (query parameter) - Indicates whether the reports should be sorted based on the number of reports.\n    \n\n#### Response\n\n- Status: 403 Forbidden\n    \n- Content-Type: application/json\n    \n\nThe response will contain a JSON object with a `message` key, which may provide additional information about the reason for the forbidden status."
			},
			"response": [
				{
					"name": "Unauthorized (as a regular user)",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/admin/reports?contentType=comment&sortByReports=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"admin",
								"reports"
							],
							"query": [
								{
									"key": "contentType",
									"value": "comment"
								},
								{
									"key": "sortByReports",
									"value": "true"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"hwxzxeosy8q\""
						},
						{
							"key": "Content-Length",
							"value": "26"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 03:13:30 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Unauthorized\"\n}"
				}
			]
		},
		{
			"name": "Hide a Reported Comment as Admin",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"contentId\": 2,\n    \"contentType\": \"comment\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/admin/reports/hide",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"reports",
						"hide"
					]
				},
				"description": "### Hide Admin Reports\n\nThis endpoint allows administrators to hide specific reports from the system.\n\n#### Request Body\n\n- `contentId` (number) - The unique identifier of the content to be hidden.\n    \n- `contentType` (string) - The type of content to be hidden.\n    \n\n#### Response\n\nThe response of this request is a JSON schema."
			},
			"response": [
				{
					"name": "Unauthorized (as regular user)",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contentId\": 2,\n    \"contentType\": \"comment\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/admin/reports/hide",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"admin",
								"reports",
								"hide"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"hwxzxeosy8q\""
						},
						{
							"key": "Content-Length",
							"value": "26"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 03:23:16 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Unauthorized\"\n}"
				}
			]
		},
		{
			"name": "Get Blog Posts (No Filtering)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/blogPost",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"86ynxpte4heo\""
						},
						{
							"key": "Content-Length",
							"value": "528"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 04:01:21 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 1,\n    \"limit\": 10,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Blog Post 1\",\n            \"description\": \"This is my first blog post.\",\n            \"tags\": \"blog, intro\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true,\n            \"linkToTemplates\": [\n                {\n                    \"blogPostId\": 1,\n                    \"templateId\": 1\n                },\n                {\n                    \"blogPostId\": 1,\n                    \"templateId\": 2\n                }\n            ]\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Blog Post 2\",\n            \"description\": \"This is my second blog post.\",\n            \"tags\": \"blog, cool\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true,\n            \"linkToTemplates\": [\n                {\n                    \"blogPostId\": 2,\n                    \"templateId\": 1\n                }\n            ]\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Get Blog Posts (Pagination)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/blogPost?limit=2&page=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost"
					],
					"query": [
						{
							"key": "limit",
							"value": "2"
						},
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost?limit=2&page=2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"ylxzlc33gd7s\""
						},
						{
							"key": "Content-Length",
							"value": "280"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 04:06:11 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 2,\n    \"limit\": 2,\n    \"data\": [\n        {\n            \"id\": 3,\n            \"title\": \"Updated New Blog\",\n            \"description\": \"I like Template 1 very much!\",\n            \"tags\": \"blog, template, update\",\n            \"userId\": 2,\n            \"rating\": -1,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true,\n            \"linkToTemplates\": [\n                {\n                    \"blogPostId\": 3,\n                    \"templateId\": 2\n                }\n            ]\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Get Blog Posts (Multi Filtering)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/blogPost?tags=blog&title=Post&linkToTemplates=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost"
					],
					"query": [
						{
							"key": "tags",
							"value": "blog"
						},
						{
							"key": "title",
							"value": "Post"
						},
						{
							"key": "linkToTemplates",
							"value": "1"
						}
					]
				},
				"description": "The API endpoint retrieves blog posts based on specified tags, title, and link to templates.\n\nThe response for this request can be documented as a JSON schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"page\": {\n            \"type\": \"integer\"\n        },\n        \"limit\": {\n            \"type\": \"integer\"\n        },\n        \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"tags\": {\n                        \"type\": \"string\"\n                    },\n                    \"userId\": {\n                        \"type\": \"integer\"\n                    },\n                    \"rating\": {\n                        \"type\": \"integer\"\n                    },\n                    \"report\": {\n                        \"type\": [\"null\", \"string\"]\n                    },\n                    \"numReports\": {\n                        \"type\": \"integer\"\n                    },\n                    \"hidden\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"editability\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"linkToTemplates\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"blogPostId\": {\n                                    \"type\": \"integer\"\n                                },\n                                \"templateId\": {\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost?tags=blog&title=Post&linkToTemplates=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost"
							],
							"query": [
								{
									"key": "tags",
									"value": "blog"
								},
								{
									"key": "title",
									"value": "Post"
								},
								{
									"key": "linkToTemplates",
									"value": "1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"86ynxpte4heo\""
						},
						{
							"key": "Content-Length",
							"value": "528"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 04:05:32 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 1,\n    \"limit\": 10,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Blog Post 1\",\n            \"description\": \"This is my first blog post.\",\n            \"tags\": \"blog, intro\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true,\n            \"linkToTemplates\": [\n                {\n                    \"blogPostId\": 1,\n                    \"templateId\": 1\n                },\n                {\n                    \"blogPostId\": 1,\n                    \"templateId\": 2\n                }\n            ]\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Blog Post 2\",\n            \"description\": \"This is my second blog post.\",\n            \"tags\": \"blog, cool\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true,\n            \"linkToTemplates\": [\n                {\n                    \"blogPostId\": 2,\n                    \"templateId\": 1\n                }\n            ]\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Sort Blog Posts by Valued",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/blogPost/sorted?sort=valued",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"sorted"
					],
					"query": [
						{
							"key": "sort",
							"value": "valued"
						}
					]
				},
				"description": "### GET /api/blogPost/sorted\n\nThis endpoint retrieves a sorted list of blog posts based on a specified value.\n\n#### Request\n\nNo request body parameters are required for this request.\n\n- `sort` (query parameter, required): Specifies the value based on which the blog posts are sorted.\n    \n\n#### Response\n\nThe response will be a JSON object with the following properties:\n\n- `page` (number): The page number of the retrieved data.\n    \n- `limit` (number): The limit of blog posts per page.\n    \n- `data` (array): An array of blog post objects, each containing the following properties:\n    \n    - `id` (number): The unique identifier of the blog post.\n        \n    - `title` (string): The title of the blog post.\n        \n    - `description` (string): The description of the blog post.\n        \n    - `tags` (string): Tags associated with the blog post.\n        \n    - `userId` (number): The user ID of the author of the blog post.\n        \n    - `rating` (number): The rating of the blog post.\n        \n    - `report` (null): A report associated with the blog post, if any.\n        \n    - `numReports` (number): The number of reports received for the blog post.\n        \n    - `hidden` (boolean): Indicates if the blog post is hidden.\n        \n    - `editability` (boolean): Indicates if the blog post is editable.\n        \n\n#### JSON Schema\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"page\": { \"type\": \"number\" },\n    \"limit\": { \"type\": \"number\" },\n    \"data\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"number\" },\n          \"title\": { \"type\": \"string\" },\n          \"description\": { \"type\": \"string\" },\n          \"tags\": { \"type\": \"string\" },\n          \"userId\": { \"type\": \"number\" },\n          \"rating\": { \"type\": \"number\" },\n          \"report\": { \"type\": \"null\" },\n          \"numReports\": { \"type\": \"number\" },\n          \"hidden\": { \"type\": \"boolean\" },\n          \"editability\": { \"type\": \"boolean\" }\n        },\n        \"required\": [\"id\", \"title\", \"description\", \"tags\", \"userId\", \"rating\", \"report\", \"numReports\", \"hidden\", \"editability\"]\n      }\n    }\n  },\n  \"required\": [\"page\", \"limit\", \"data\"]\n}\n\n ```"
			},
			"response": [
				{
					"name": "Highest rated posts returned first",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost/sorted?sort=valued",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"sorted"
							],
							"query": [
								{
									"key": "sort",
									"value": "valued"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"10frl6pednagf\""
						},
						{
							"key": "Content-Length",
							"value": "591"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 04:08:29 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 1,\n    \"limit\": 10,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Blog Post 1\",\n            \"description\": \"This is my first blog post.\",\n            \"tags\": \"blog, intro\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Blog Post 2\",\n            \"description\": \"This is my second blog post.\",\n            \"tags\": \"blog, cool\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true\n        },\n        {\n            \"id\": 3,\n            \"title\": \"Updated New Blog\",\n            \"description\": \"I like Template 1 very much!\",\n            \"tags\": \"blog, template, update\",\n            \"userId\": 2,\n            \"rating\": -1,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Sort Blog Posts by Controversial",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/blogPost/sorted?sort=controversial",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"sorted"
					],
					"query": [
						{
							"key": "sort",
							"value": "controversial"
						}
					]
				}
			},
			"response": [
				{
					"name": "Lowest rated posts returned first",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost/sorted?sort=controversial",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"sorted"
							],
							"query": [
								{
									"key": "sort",
									"value": "controversial"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"18bvz6clitkgf\""
						},
						{
							"key": "Content-Length",
							"value": "591"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 04:10:55 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 1,\n    \"limit\": 10,\n    \"data\": [\n        {\n            \"id\": 3,\n            \"title\": \"Updated New Blog\",\n            \"description\": \"I like Template 1 very much!\",\n            \"tags\": \"blog, template, update\",\n            \"userId\": 2,\n            \"rating\": -1,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true\n        },\n        {\n            \"id\": 1,\n            \"title\": \"Blog Post 1\",\n            \"description\": \"This is my first blog post.\",\n            \"tags\": \"blog, intro\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Blog Post 2\",\n            \"description\": \"This is my second blog post.\",\n            \"tags\": \"blog, cool\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Sort Blog Posts by Template Mentioned",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/blogPost/template-mention?name=Template 1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"template-mention"
					],
					"query": [
						{
							"key": "name",
							"value": "Template 1"
						}
					]
				},
				"description": "### GET /api/blogPost/template-mention\n\nThis endpoint retrieves a blog post template by name.\n\n#### Request\n\n- Query parameter:\n    \n    - `name` (string, required): The name of the template to be retrieved.\n        \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n  \"page\": number,\n  \"limit\": number,\n  \"data\": [\n    {\n      \"id\": number,\n      \"title\": string,\n      \"description\": string,\n      \"tags\": string,\n      \"userId\": number,\n      \"rating\": number,\n      \"report\": string or null,\n      \"numReports\": number,\n      \"hidden\": boolean,\n      \"editability\": boolean,\n      \"linkToTemplates\": [\n        {\n          \"blogPostId\": number,\n          \"templateId\": number\n        }\n      ]\n    }\n  ]\n}\n\n ```"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost/template-mention?name=Template 1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"template-mention"
							],
							"query": [
								{
									"key": "name",
									"value": "Template 1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"a9ididltfk7t\""
						},
						{
							"key": "Content-Length",
							"value": "281"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 04:13:53 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 1,\n    \"limit\": 10,\n    \"data\": [\n        {\n            \"id\": 3,\n            \"title\": \"Updated New Blog\",\n            \"description\": \"I like Template 1 very much!\",\n            \"tags\": \"blog, template, update\",\n            \"userId\": 2,\n            \"rating\": -1,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true,\n            \"linkToTemplates\": [\n                {\n                    \"blogPostId\": 3,\n                    \"templateId\": 2\n                }\n            ]\n        }\n    ]\n}"
				},
				{
					"name": "Error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost/template-mention?name=Template 3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"template-mention"
							],
							"query": [
								{
									"key": "name",
									"value": "Template 3"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"14ugd0nx17t18\""
						},
						{
							"key": "Content-Length",
							"value": "44"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 04:15:05 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"No templates have the given name\"\n}"
				}
			]
		},
		{
			"name": "Delete Blog Post 3 Attempt",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/blogPost/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"3"
					]
				}
			},
			"response": [
				{
					"name": "Error (Not Author)",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"3"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"cbn47kkgom18\""
						},
						{
							"key": "Content-Length",
							"value": "44"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 04:22:53 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"You cannot delete this blog post\"\n}"
				}
			]
		},
		{
			"name": "User 2 Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.environment.set(\"accessToken\", response.accessToken);\r",
							"pm.environment.set(\"refreshToken\", response.refreshToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"john\",\r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"john\",\r\n    \"password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"1f8i4b6jb2d8\""
						},
						{
							"key": "Content-Length",
							"value": "476"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 04:24:55 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJqb2huIiwicm9sZSI6IlVTRVIiLCJleHBpcmVzQXQiOiIxNzMwNjA3ODk1NTQ2M2giLCJpYXQiOjE3MzA2MDc4OTUsImV4cCI6MTczMDYxODY5NX0.25LgNfeF2_HeWGL-P4AFD2X9_0ES8b0QCzu0o86EQLs\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJqb2huIiwicm9sZSI6IlVTRVIiLCJleHBpcmVzQXQiOiIxNzMwNjA3ODk1NTQ2M2giLCJpYXQiOjE3MzA2MDc4OTUsImV4cCI6MTczMDg2NzA5NX0.vJYZ-PorHn6rdmx8TQSA-vboqYIoktMO4E13LKlUxLA\"\n}"
				}
			]
		},
		{
			"name": "Delete Blog Post 3",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/blogPost/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost",
						"3"
					]
				},
				"description": "The API endpoint sends an HTTP DELETE request to [http://localhost:3000/api/blogPost/3](http://localhost:3000/api/blogPost/3) to delete a specific blog post. Upon successful deletion, the response will be in the form of a JSON object with a \"message\" key.\n\n``` json\n{\n    \"message\": \"string\"\n}\n\n ```\n\nThis JSON schema represents the response structure for the DELETE request, where the \"message\" key contains a string value."
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"guvuh0pwgyv\""
						},
						{
							"key": "Content-Length",
							"value": "31"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 15:39:56 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Blog Post deleted\"\n}"
				}
			]
		},
		{
			"name": "Get Blog Posts",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/blogPost",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"blogPost"
					]
				}
			},
			"response": [
				{
					"name": "Blog Post 3 correctly removed from list",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/blogPost",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"blogPost"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"86ynxpte4heo\""
						},
						{
							"key": "Content-Length",
							"value": "528"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 15:41:06 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"page\": 1,\n    \"limit\": 10,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Blog Post 1\",\n            \"description\": \"This is my first blog post.\",\n            \"tags\": \"blog, intro\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true,\n            \"linkToTemplates\": [\n                {\n                    \"blogPostId\": 1,\n                    \"templateId\": 1\n                },\n                {\n                    \"blogPostId\": 1,\n                    \"templateId\": 2\n                }\n            ]\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Blog Post 2\",\n            \"description\": \"This is my second blog post.\",\n            \"tags\": \"blog, cool\",\n            \"userId\": 1,\n            \"rating\": 0,\n            \"report\": null,\n            \"numReports\": 0,\n            \"hidden\": false,\n            \"editability\": true,\n            \"linkToTemplates\": [\n                {\n                    \"blogPostId\": 2,\n                    \"templateId\": 1\n                }\n            ]\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "User 3 Signup",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"my3k\",\r\n    \"firstName\": \"Mykola\",\r\n    \"lastName\": \"Zhuk\",\r\n    \"email\": \"my3k@gmail.com\",\r\n    \"password\": \"qwerty12345\",\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar1.png\", \r\n    \"phoneNum\": \"+1456789087\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/signup",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"signup"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"my3k\",\r\n    \"firstName\": \"Mykola\",\r\n    \"lastName\": \"Zhuk\",\r\n    \"email\": \"my3k@gmail.com\",\r\n    \"password\": \"qwerty12345\",\r\n    \"avatar\": \"http://localhost:3000/avatars/avatar1.png\", \r\n    \"phoneNum\": \"+1456789087\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"signup"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"ozh7evzvib52\""
						},
						{
							"key": "Content-Length",
							"value": "182"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 19:57:26 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"username\": \"my3k\",\n    \"firstName\": \"Mykola\",\n    \"lastName\": \"Zhuk\",\n    \"email\": \"my3k@gmail.com\",\n    \"avatar\": \"http://localhost:3000/avatars/avatar1.png\",\n    \"phoneNum\": \"+1456789087\",\n    \"role\": \"USER\"\n}"
				}
			]
		},
		{
			"name": "User 3 Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.environment.set(\"accessToken\", response.accessToken);\r",
							"pm.environment.set(\"refreshToken\", response.refreshToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"my3k\",\r\n    \"password\": \"qwerty12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"my3k\",\r\n    \"password\": \"qwerty12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"y1v893hue5d8\""
						},
						{
							"key": "Content-Length",
							"value": "476"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:00:41 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiJteTNrIiwicm9sZSI6IlVTRVIiLCJleHBpcmVzQXQiOiIxNzMwNjY0MDQxMzgwM2giLCJpYXQiOjE3MzA2NjQwNDEsImV4cCI6MTczMDY3NDg0MX0.WccZhrFCzM9aieCmskEwke90Io-b4tzJ4ci16nlHAj4\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywidXNlcm5hbWUiOiJteTNrIiwicm9sZSI6IlVTRVIiLCJleHBpcmVzQXQiOiIxNzMwNjY0MDQxMzgwM2giLCJpYXQiOjE3MzA2NjQwNDEsImV4cCI6MTczMDkyMzI0MX0.p2nXXIZyc0vv2_njQ-ATIBpJKcjDgSBNaY6MPKmU9dQ\"\n}"
				}
			]
		},
		{
			"name": "Save Code as a Template (Authenticated)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"My Sample Template\",\r\n  \"explanation\": \"This is a sample code template.\",\r\n  \"tags\": [\"sample\", \"test\"],\r\n  \"code\": \"print('Hello from the template!')\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"My Sample Template\",\r\n  \"explanation\": \"This is a sample code template.\",\r\n  \"tags\": [\"sample\", \"test\"],\r\n  \"code\": \"print('Hello from the template!')\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"7fcybm2pym5d\""
						},
						{
							"key": "Content-Length",
							"value": "193"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:05:47 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"title\": \"My Sample Template\",\n    \"explanation\": \"This is a sample code template.\",\n    \"tags\": \"sample,test\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"print('Hello from the template!')\"\n}"
				}
			]
		},
		{
			"name": "More templates( for search)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"JavaScript Basics\",\r\n  \"explanation\": \"Introduction to JavaScript variables and functions.\",\r\n  \"tags\": [\"javascript\", \"basics\", \"functions\"],\r\n  \"code\": \"let x = 10; function add(a, b) { return a + b; } console.log(add(x, 5));\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"JavaScript Basics\",\r\n  \"explanation\": \"Introduction to JavaScript variables and functions.\",\r\n  \"tags\": [\"javascript\", \"basics\", \"functions\"],\r\n  \"code\": \"let x = 10; function add(a, b) { return a + b; } console.log(add(x, 5));\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"sr1ebti7vp7f\""
						},
						{
							"key": "Content-Length",
							"value": "267"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:11:11 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 4,\n    \"title\": \"JavaScript Basics\",\n    \"explanation\": \"Introduction to JavaScript variables and functions.\",\n    \"tags\": \"javascript,basics,functions\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"let x = 10; function add(a, b) { return a + b; } console.log(add(x, 5));\"\n}"
				}
			]
		},
		{
			"name": "More templates( for search) Copy",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Python Data Analysis\",\r\n  \"explanation\": \"Using Python for basic data analysis with lists and loops.\",\r\n  \"tags\": [\"python\", \"data analysis\", \"loops\"],\r\n  \"code\": \"data = [1, 2, 3, 4, 5]; mean = sum(data) / len(data); print(mean);\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Python Data Analysis\",\r\n  \"explanation\": \"Using Python for basic data analysis with lists and loops.\",\r\n  \"tags\": [\"python\", \"data analysis\", \"loops\"],\r\n  \"code\": \"data = [1, 2, 3, 4, 5]; mean = sum(data) / len(data); print(mean);\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"ecs88b2c2q7i\""
						},
						{
							"key": "Content-Length",
							"value": "270"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:12:56 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 5,\n    \"title\": \"Python Data Analysis\",\n    \"explanation\": \"Using Python for basic data analysis with lists and loops.\",\n    \"tags\": \"python,data analysis,loops\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"data = [1, 2, 3, 4, 5]; mean = sum(data) / len(data); print(mean);\"\n}"
				}
			]
		},
		{
			"name": "More templates( for search) Copy 2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Java OOP Concepts\",\r\n  \"explanation\": \"Introduction to object-oriented programming in Java.\",\r\n  \"tags\": [\"java\", \"oop\", \"classes\"],\r\n  \"code\": \"public class Animal { String name; public Animal(String name) { this.name = name; } public void speak() { System.out.println(name + ' says hello!'); } }\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Java OOP Concepts\",\r\n  \"explanation\": \"Introduction to object-oriented programming in Java.\",\r\n  \"tags\": [\"java\", \"oop\", \"classes\"],\r\n  \"code\": \"public class Animal { String name; public Animal(String name) { this.name = name; } public void speak() { System.out.println(name + ' says hello!'); } }\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"sa37un20y29d\""
						},
						{
							"key": "Content-Length",
							"value": "337"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:13:16 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 6,\n    \"title\": \"Java OOP Concepts\",\n    \"explanation\": \"Introduction to object-oriented programming in Java.\",\n    \"tags\": \"java,oop,classes\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"public class Animal { String name; public Animal(String name) { this.name = name; } public void speak() { System.out.println(name + ' says hello!'); } }\"\n}"
				}
			]
		},
		{
			"name": "More templates( for search) Copy 3",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"C++ Memory Management\",\r\n  \"explanation\": \"Understanding pointers and dynamic memory in C++.\",\r\n  \"tags\": [\"cpp\", \"memory management\", \"pointers\"],\r\n  \"code\": \"#include <iostream>\\nint main() { int* ptr = new int(5); std::cout << *ptr << std::endl; delete ptr; return 0; }\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"C++ Memory Management\",\r\n  \"explanation\": \"Understanding pointers and dynamic memory in C++.\",\r\n  \"tags\": [\"cpp\", \"memory management\", \"pointers\"],\r\n  \"code\": \"#include <iostream>\\nint main() { int* ptr = new int(5); std::cout << *ptr << std::endl; delete ptr; return 0; }\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"ssi1k7i9w28o\""
						},
						{
							"key": "Content-Length",
							"value": "312"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:13:38 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 7,\n    \"title\": \"C++ Memory Management\",\n    \"explanation\": \"Understanding pointers and dynamic memory in C++.\",\n    \"tags\": \"cpp,memory management,pointers\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"#include <iostream>\\nint main() { int* ptr = new int(5); std::cout << *ptr << std::endl; delete ptr; return 0; }\"\n}"
				}
			]
		},
		{
			"name": "More templates( for search) Copy 4",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"JavaScript Array Methods\",\r\n  \"explanation\": \"Using map, filter, and reduce on arrays in JavaScript.\",\r\n  \"tags\": [\"javascript\", \"arrays\", \"methods\"],\r\n  \"code\": \"const nums = [1, 2, 3, 4, 5]; const doubled = nums.map(n => n * 2); console.log(doubled);\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"JavaScript Array Methods\",\r\n  \"explanation\": \"Using map, filter, and reduce on arrays in JavaScript.\",\r\n  \"tags\": [\"javascript\", \"arrays\", \"methods\"],\r\n  \"code\": \"const nums = [1, 2, 3, 4, 5]; const doubled = nums.map(n => n * 2); console.log(doubled);\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"3y447fl18q84\""
						},
						{
							"key": "Content-Length",
							"value": "292"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:14:00 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 8,\n    \"title\": \"JavaScript Array Methods\",\n    \"explanation\": \"Using map, filter, and reduce on arrays in JavaScript.\",\n    \"tags\": \"javascript,arrays,methods\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"const nums = [1, 2, 3, 4, 5]; const doubled = nums.map(n => n * 2); console.log(doubled);\"\n}"
				}
			]
		},
		{
			"name": "More templates( for search) Copy 5",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"SQL Database Basics\",\r\n  \"explanation\": \"Introduction to basic SQL commands and database management.\",\r\n  \"tags\": [\"sql\", \"database\", \"commands\"],\r\n  \"code\": \"CREATE TABLE Users (id INT, name VARCHAR(100)); INSERT INTO Users VALUES (1, 'Alice');\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"SQL Database Basics\",\r\n  \"explanation\": \"Introduction to basic SQL commands and database management.\",\r\n  \"tags\": [\"sql\", \"database\", \"commands\"],\r\n  \"code\": \"CREATE TABLE Users (id INT, name VARCHAR(100)); INSERT INTO Users VALUES (1, 'Alice');\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"k4ux76y9cl7x\""
						},
						{
							"key": "Content-Length",
							"value": "285"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:15:09 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 9,\n    \"title\": \"SQL Database Basics\",\n    \"explanation\": \"Introduction to basic SQL commands and database management.\",\n    \"tags\": \"sql,database,commands\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"CREATE TABLE Users (id INT, name VARCHAR(100)); INSERT INTO Users VALUES (1, 'Alice');\"\n}"
				}
			]
		},
		{
			"name": "More templates( for search) Copy 6",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Python Web Scraping with BeautifulSoup\",\r\n  \"explanation\": \"Web scraping basics in Python using the BeautifulSoup library.\",\r\n  \"tags\": [\"python\", \"web scraping\", \"beautifulsoup\"],\r\n  \"code\": \"from bs4 import BeautifulSoup; import requests; page = requests.get('https://example.com'); soup = BeautifulSoup(page.content, 'html.parser'); print(soup.title.text);\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Python Web Scraping with BeautifulSoup\",\r\n  \"explanation\": \"Web scraping basics in Python using the BeautifulSoup library.\",\r\n  \"tags\": [\"python\", \"web scraping\", \"beautifulsoup\"],\r\n  \"code\": \"from bs4 import BeautifulSoup; import requests; page = requests.get('https://example.com'); soup = BeautifulSoup(page.content, 'html.parser'); print(soup.title.text);\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"buz77ohzndb4\""
						},
						{
							"key": "Content-Length",
							"value": "400"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:15:38 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 10,\n    \"title\": \"Python Web Scraping with BeautifulSoup\",\n    \"explanation\": \"Web scraping basics in Python using the BeautifulSoup library.\",\n    \"tags\": \"python,web scraping,beautifulsoup\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"from bs4 import BeautifulSoup; import requests; page = requests.get('https://example.com'); soup = BeautifulSoup(page.content, 'html.parser'); print(soup.title.text);\"\n}"
				}
			]
		},
		{
			"name": "View User's Saved Templates(Authenticated)",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates",
						"user"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates",
								"user"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"6qpebgii211w5\""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:16:00 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"templates\": [\n        {\n            \"id\": 3,\n            \"title\": \"My Sample Template\",\n            \"explanation\": \"This is a sample code template.\",\n            \"tags\": \"sample,test\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"print('Hello from the template!')\"\n        },\n        {\n            \"id\": 4,\n            \"title\": \"JavaScript Basics\",\n            \"explanation\": \"Introduction to JavaScript variables and functions.\",\n            \"tags\": \"javascript,basics,functions\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"let x = 10; function add(a, b) { return a + b; } console.log(add(x, 5));\"\n        },\n        {\n            \"id\": 5,\n            \"title\": \"Python Data Analysis\",\n            \"explanation\": \"Using Python for basic data analysis with lists and loops.\",\n            \"tags\": \"python,data analysis,loops\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"data = [1, 2, 3, 4, 5]; mean = sum(data) / len(data); print(mean);\"\n        },\n        {\n            \"id\": 6,\n            \"title\": \"Java OOP Concepts\",\n            \"explanation\": \"Introduction to object-oriented programming in Java.\",\n            \"tags\": \"java,oop,classes\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"public class Animal { String name; public Animal(String name) { this.name = name; } public void speak() { System.out.println(name + ' says hello!'); } }\"\n        },\n        {\n            \"id\": 7,\n            \"title\": \"C++ Memory Management\",\n            \"explanation\": \"Understanding pointers and dynamic memory in C++.\",\n            \"tags\": \"cpp,memory management,pointers\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"#include <iostream>\\nint main() { int* ptr = new int(5); std::cout << *ptr << std::endl; delete ptr; return 0; }\"\n        },\n        {\n            \"id\": 8,\n            \"title\": \"JavaScript Array Methods\",\n            \"explanation\": \"Using map, filter, and reduce on arrays in JavaScript.\",\n            \"tags\": \"javascript,arrays,methods\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"const nums = [1, 2, 3, 4, 5]; const doubled = nums.map(n => n * 2); console.log(doubled);\"\n        },\n        {\n            \"id\": 9,\n            \"title\": \"SQL Database Basics\",\n            \"explanation\": \"Introduction to basic SQL commands and database management.\",\n            \"tags\": \"sql,database,commands\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"CREATE TABLE Users (id INT, name VARCHAR(100)); INSERT INTO Users VALUES (1, 'Alice');\"\n        },\n        {\n            \"id\": 10,\n            \"title\": \"Python Web Scraping with BeautifulSoup\",\n            \"explanation\": \"Web scraping basics in Python using the BeautifulSoup library.\",\n            \"tags\": \"python,web scraping,beautifulsoup\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"from bs4 import BeautifulSoup; import requests; page = requests.get('https://example.com'); soup = BeautifulSoup(page.content, 'html.parser'); print(soup.title.text);\"\n        }\n    ],\n    \"pagination\": {\n        \"totalItems\": 8,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"perPage\": 10\n    }\n}"
				}
			]
		},
		{
			"name": "Search User's Templates (Authenticated)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/templates/user?search=JavaScript&page=1&limit=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates",
						"user"
					],
					"query": [
						{
							"key": "search",
							"value": "JavaScript"
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "10"
						}
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/templates/user?search=JavaScript&page=1&limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates",
								"user"
							],
							"query": [
								{
									"key": "search",
									"value": "JavaScript"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"4t7vdo9pt5i2\""
						},
						{
							"key": "Content-Length",
							"value": "650"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:19:56 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"templates\": [\n        {\n            \"id\": 4,\n            \"title\": \"JavaScript Basics\",\n            \"explanation\": \"Introduction to JavaScript variables and functions.\",\n            \"tags\": \"javascript,basics,functions\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"let x = 10; function add(a, b) { return a + b; } console.log(add(x, 5));\"\n        },\n        {\n            \"id\": 8,\n            \"title\": \"JavaScript Array Methods\",\n            \"explanation\": \"Using map, filter, and reduce on arrays in JavaScript.\",\n            \"tags\": \"javascript,arrays,methods\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"const nums = [1, 2, 3, 4, 5]; const doubled = nums.map(n => n * 2); console.log(doubled);\"\n        }\n    ],\n    \"pagination\": {\n        \"totalItems\": 2,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"perPage\": 10\n    }\n}"
				}
			]
		},
		{
			"name": "Edit a Template 3 (Authenticated)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Updated Template Title\",\r\n  \"explanation\": \"Updated explanation.\",\r\n  \"tags\": [\"updated\", \"template\"],\r\n  \"code\": \"print('Updated code!')\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates",
						"3"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Updated Template Title\",\r\n  \"explanation\": \"Updated explanation.\",\r\n  \"tags\": [\"updated\", \"template\"],\r\n  \"code\": \"print('Updated code!')\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"kxinq9e73v50\""
						},
						{
							"key": "Content-Length",
							"value": "180"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:23:50 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 3,\n    \"title\": \"Updated Template Title\",\n    \"explanation\": \"Updated explanation.\",\n    \"tags\": \"updated,template\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": null,\n    \"code\": \"print('Updated code!')\"\n}"
				}
			]
		},
		{
			"name": "Delete Template",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/templates/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates",
						"3"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/templates/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"46agwrbkxk18\""
						},
						{
							"key": "Content-Length",
							"value": "44"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:24:47 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Template deleted successfully.\"\n}"
				}
			]
		},
		{
			"name": "Get an Existing Template( visitor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/templates/public",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates",
						"public"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/templates/public",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates",
								"public"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"14fwhi0d5zg2po\""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:26:56 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"templates\": [\n        {\n            \"id\": 1,\n            \"title\": \"Template 1\",\n            \"explanation\": \"This is my first template\",\n            \"tags\": \"intro\",\n            \"userId\": 1,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"console.log('Hello, World!');\",\n            \"user\": {\n                \"firstName\": \"Daniel\",\n                \"lastName\": \"Kal\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar2.png\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Template 2\",\n            \"explanation\": \"This is my second template.\",\n            \"tags\": \"greeting,hello\",\n            \"userId\": 1,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"console.log('Hello again!');\",\n            \"user\": {\n                \"firstName\": \"Daniel\",\n                \"lastName\": \"Kal\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar2.png\"\n            }\n        },\n        {\n            \"id\": 4,\n            \"title\": \"JavaScript Basics\",\n            \"explanation\": \"Introduction to JavaScript variables and functions.\",\n            \"tags\": \"javascript,basics,functions\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"let x = 10; function add(a, b) { return a + b; } console.log(add(x, 5));\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 5,\n            \"title\": \"Python Data Analysis\",\n            \"explanation\": \"Using Python for basic data analysis with lists and loops.\",\n            \"tags\": \"python,data analysis,loops\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"data = [1, 2, 3, 4, 5]; mean = sum(data) / len(data); print(mean);\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 6,\n            \"title\": \"Java OOP Concepts\",\n            \"explanation\": \"Introduction to object-oriented programming in Java.\",\n            \"tags\": \"java,oop,classes\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"public class Animal { String name; public Animal(String name) { this.name = name; } public void speak() { System.out.println(name + ' says hello!'); } }\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 7,\n            \"title\": \"C++ Memory Management\",\n            \"explanation\": \"Understanding pointers and dynamic memory in C++.\",\n            \"tags\": \"cpp,memory management,pointers\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"#include <iostream>\\nint main() { int* ptr = new int(5); std::cout << *ptr << std::endl; delete ptr; return 0; }\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 8,\n            \"title\": \"JavaScript Array Methods\",\n            \"explanation\": \"Using map, filter, and reduce on arrays in JavaScript.\",\n            \"tags\": \"javascript,arrays,methods\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"const nums = [1, 2, 3, 4, 5]; const doubled = nums.map(n => n * 2); console.log(doubled);\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 9,\n            \"title\": \"SQL Database Basics\",\n            \"explanation\": \"Introduction to basic SQL commands and database management.\",\n            \"tags\": \"sql,database,commands\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"CREATE TABLE Users (id INT, name VARCHAR(100)); INSERT INTO Users VALUES (1, 'Alice');\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 10,\n            \"title\": \"Python Web Scraping with BeautifulSoup\",\n            \"explanation\": \"Web scraping basics in Python using the BeautifulSoup library.\",\n            \"tags\": \"python,web scraping,beautifulsoup\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"from bs4 import BeautifulSoup; import requests; page = requests.get('https://example.com'); soup = BeautifulSoup(page.content, 'html.parser'); print(soup.title.text);\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        }\n    ],\n    \"pagination\": {\n        \"totalItems\": 9,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"perPage\": 10\n    }\n}"
				}
			]
		},
		{
			"name": "Fork and Save new Template ( Authenticated)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Forked Template Title\",\r\n  \"explanation\": \"This is a forked version.\",\r\n  \"tags\": [\"forked\", \"example\"],\r\n  \"code\": \"print('Forked code!')\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/templates/fork/8",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates",
						"fork",
						"8"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Forked Template Title\",\r\n  \"explanation\": \"This is a forked version.\",\r\n  \"tags\": [\"forked\", \"example\"],\r\n  \"code\": \"print('Forked code!')\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/templates/fork/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates",
								"fork",
								"8"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"gp3hxj1ngd4z\""
						},
						{
							"key": "Content-Length",
							"value": "179"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:31:48 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 11,\n    \"title\": \"Forked Template Title\",\n    \"explanation\": \"This is a forked version.\",\n    \"tags\": \"forked,example\",\n    \"userId\": 3,\n    \"hidden\": false,\n    \"forkedFrom\": 8,\n    \"code\": \"print('Forked code!')\"\n}"
				}
			]
		},
		{
			"name": "Search Through All Templates (non authenticated)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/templates/public",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"templates",
						"public"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/templates/public",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"templates",
								"public"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"2y5co3yxoh2xi\""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:33:28 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"templates\": [\n        {\n            \"id\": 1,\n            \"title\": \"Template 1\",\n            \"explanation\": \"This is my first template\",\n            \"tags\": \"intro\",\n            \"userId\": 1,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"console.log('Hello, World!');\",\n            \"user\": {\n                \"firstName\": \"Daniel\",\n                \"lastName\": \"Kal\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar2.png\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"title\": \"Template 2\",\n            \"explanation\": \"This is my second template.\",\n            \"tags\": \"greeting,hello\",\n            \"userId\": 1,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"console.log('Hello again!');\",\n            \"user\": {\n                \"firstName\": \"Daniel\",\n                \"lastName\": \"Kal\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar2.png\"\n            }\n        },\n        {\n            \"id\": 4,\n            \"title\": \"JavaScript Basics\",\n            \"explanation\": \"Introduction to JavaScript variables and functions.\",\n            \"tags\": \"javascript,basics,functions\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"let x = 10; function add(a, b) { return a + b; } console.log(add(x, 5));\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 5,\n            \"title\": \"Python Data Analysis\",\n            \"explanation\": \"Using Python for basic data analysis with lists and loops.\",\n            \"tags\": \"python,data analysis,loops\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"data = [1, 2, 3, 4, 5]; mean = sum(data) / len(data); print(mean);\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 6,\n            \"title\": \"Java OOP Concepts\",\n            \"explanation\": \"Introduction to object-oriented programming in Java.\",\n            \"tags\": \"java,oop,classes\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"public class Animal { String name; public Animal(String name) { this.name = name; } public void speak() { System.out.println(name + ' says hello!'); } }\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 7,\n            \"title\": \"C++ Memory Management\",\n            \"explanation\": \"Understanding pointers and dynamic memory in C++.\",\n            \"tags\": \"cpp,memory management,pointers\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"#include <iostream>\\nint main() { int* ptr = new int(5); std::cout << *ptr << std::endl; delete ptr; return 0; }\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 8,\n            \"title\": \"JavaScript Array Methods\",\n            \"explanation\": \"Using map, filter, and reduce on arrays in JavaScript.\",\n            \"tags\": \"javascript,arrays,methods\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"const nums = [1, 2, 3, 4, 5]; const doubled = nums.map(n => n * 2); console.log(doubled);\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 9,\n            \"title\": \"SQL Database Basics\",\n            \"explanation\": \"Introduction to basic SQL commands and database management.\",\n            \"tags\": \"sql,database,commands\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"CREATE TABLE Users (id INT, name VARCHAR(100)); INSERT INTO Users VALUES (1, 'Alice');\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 10,\n            \"title\": \"Python Web Scraping with BeautifulSoup\",\n            \"explanation\": \"Web scraping basics in Python using the BeautifulSoup library.\",\n            \"tags\": \"python,web scraping,beautifulsoup\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": null,\n            \"code\": \"from bs4 import BeautifulSoup; import requests; page = requests.get('https://example.com'); soup = BeautifulSoup(page.content, 'html.parser'); print(soup.title.text);\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        },\n        {\n            \"id\": 11,\n            \"title\": \"Forked Template Title\",\n            \"explanation\": \"This is a forked version.\",\n            \"tags\": \"forked,example\",\n            \"userId\": 3,\n            \"hidden\": false,\n            \"forkedFrom\": 8,\n            \"code\": \"print('Forked code!')\",\n            \"user\": {\n                \"firstName\": \"Mykola\",\n                \"lastName\": \"Zhuk\",\n                \"avatar\": \"http://localhost:3000/avatars/avatar1.png\"\n            }\n        }\n    ],\n    \"pagination\": {\n        \"totalItems\": 10,\n        \"totalPages\": 1,\n        \"currentPage\": 1,\n        \"perPage\": 10\n    }\n}"
				}
			]
		},
		{
			"name": "Execute Code Python ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"print('Hello, World!')\",\r\n  \"language\": \"python\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"print('Hello, World!')\",\r\n  \"language\": \"python\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"167wcsb2n9mq\""
						},
						{
							"key": "Content-Length",
							"value": "26"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:40:41 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"output\": \"Hello, World!\"\n}"
				}
			]
		},
		{
			"name": "Execute Code Python with Error ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"print(1 / 0)\",\r\n  \"language\": \"python\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"print(1 / 0)\",\r\n  \"language\": \"python\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"xuau1ihmwu1b\""
						},
						{
							"key": "Content-Length",
							"value": "47"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 23:31:26 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"ZeroDivisionError: division by zero\"\n}"
				}
			]
		},
		{
			"name": "Execute Code Python with stdin ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"x = input('Enter a number: ')\\nprint('You entered:', x)\",\r\n  \"input\": \"5\",\r\n  \"language\": \"python\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"x = input('Enter a number: ')\\nprint('You entered:', x)\",\r\n  \"input\": \"5\",\r\n  \"language\": \"python\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"dnaetdtnta17\""
						},
						{
							"key": "Content-Length",
							"value": "43"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 21:47:39 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"output\": \"Enter a number: You entered: 5\"\n}"
				}
			]
		},
		{
			"name": "Execute Code JS ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"console.log('Hello, JavaScript!');\",\r\n  \"language\": \"javascript\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"console.log('Hello, JavaScript!');\",\r\n  \"language\": \"javascript\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"pnk4gnhhfrv\""
						},
						{
							"key": "Content-Length",
							"value": "31"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:46:06 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"output\": \"Hello, JavaScript!\"\n}"
				}
			]
		},
		{
			"name": "Execute Code JS with Error( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"console.log('Hello, World!';\",  // Missing closing parenthesis\r\n  \"language\": \"javascript\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"console.log('Hello, World!';\",  // Missing closing parenthesis\r\n  \"language\": \"javascript\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"yp106ks0zy15\""
						},
						{
							"key": "Content-Length",
							"value": "41"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 23:26:54 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"missing ) after argument list\"\n}"
				}
			]
		},
		{
			"name": "Execute Code Java ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"public class Main { public static void main(String[] args) { System.out.println(\\\"Hello, Java!\\\"); } }\",\r\n  \"language\": \"java\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"public class Main { public static void main(String[] args) { System.out.println(\\\"Hello, Java!\\\"); } }\",\r\n  \"language\": \"java\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"til4kxg6rqp\""
						},
						{
							"key": "Content-Length",
							"value": "25"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 20:46:49 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"output\": \"Hello, Java!\"\n}"
				}
			]
		},
		{
			"name": "Execute Code Java with Error( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"public class Main { public static void main(String[] args) { System.out.println(\\\"Hello, World!\\\") } }\",\r\n  \"language\": \"java\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"public class Main { public static void main(String[] args) { System.out.println(\\\"Hello, World!\\\") } }\",\r\n  \"language\": \"java\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"130kwi2n2dc1j\""
						},
						{
							"key": "Content-Length",
							"value": "55"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 23:31:44 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Compilation failed: ';' expected\\r\\n1 error\"\n}"
				}
			]
		},
		{
			"name": "Execute Code Java with stdin( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"import java.util.Scanner;\\npublic class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(\\\"Enter a number: \\\"); int x = scanner.nextInt(); System.out.println(\\\"You entered: \\\" + x); scanner.close(); } }\",\r\n  \"input\": \"11\",\r\n  \"language\": \"java\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"import java.util.Scanner;\\npublic class Main { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(\\\"Enter a number: \\\"); int x = scanner.nextInt(); System.out.println(\\\"You entered: \\\" + x); scanner.close(); } }\",\r\n  \"input\": \"11\",\r\n  \"language\": \"java\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"10a1aeppjvp18\""
						},
						{
							"key": "Content-Length",
							"value": "44"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 21:47:02 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"output\": \"Enter a number: You entered: 11\"\n}"
				}
			]
		},
		{
			"name": "Execute Code C ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"#include <stdio.h>\\nint main() { printf(\\\"Hello, C!\\\\n\\\"); return 0; }\",\r\n  \"language\": \"c\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"#include <stdio.h>\\nint main() { printf(\\\"Hello, C!\\\\n\\\"); return 0; }\",\r\n  \"language\": \"c\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"119p80xslw2m\""
						},
						{
							"key": "Content-Length",
							"value": "22"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 21:22:26 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"output\": \"Hello, C!\"\n}"
				}
			]
		},
		{
			"name": "Execute Code C with Error ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"#include <stdio.h>\\nint main() { printf(\\\"Hello, World!\\\") return 0; }\",\r\n  \"language\": \"c\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"#include <stdio.h>\\nint main() { printf(\\\"Hello, World!\\\") return 0; }\",\r\n  \"language\": \"c\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"vejpp0i0dm1o\""
						},
						{
							"key": "Content-Length",
							"value": "60"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 23:27:52 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Compilation failed: expected ';' before 'return'\"\n}"
				}
			]
		},
		{
			"name": "Execute Code C with stdin ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"#include <stdio.h>\\nint main() { int x; printf(\\\"Enter a number: \\\"); scanf(\\\"%d\\\", &x); printf(\\\"You entered: %d\\\\n\\\", x); return 0; }\",\r\n  \"input\": \"42\",\r\n  \"language\": \"c\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"#include <stdio.h>\\nint main() { int x; printf(\\\"Enter a number: \\\"); scanf(\\\"%d\\\", &x); printf(\\\"You entered: %d\\\\n\\\", x); return 0; }\",\r\n  \"input\": \"42\",\r\n  \"language\": \"c\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"3qtaz82a3p18\""
						},
						{
							"key": "Content-Length",
							"value": "44"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 21:45:32 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"output\": \"Enter a number: You entered: 42\"\n}"
				}
			]
		},
		{
			"name": "Execute Code C++ ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"#include <iostream>\\nint main() { std::cout << \\\"Hello, C++!\\\" << std::endl; return 0; }\",\r\n  \"language\": \"cpp\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"#include <iostream>\\nint main() { std::cout << \\\"Hello, C++!\\\" << std::endl; return 0; }\",\r\n  \"language\": \"cpp\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"swk2kxr4v9o\""
						},
						{
							"key": "Content-Length",
							"value": "24"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 21:27:02 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"output\": \"Hello, C++!\"\n}"
				}
			]
		},
		{
			"name": "Execute Code C++ with error ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"#include <iostream>\\nint main() { std::cout << \\\"Hello, World!\\\" << std::endl; \",\r\n  \"language\": \"cpp\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"#include <iostream>\\nint main() { std::cout << \\\"Hello, World!\\\" << std::endl; \",\r\n  \"language\": \"cpp\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"18bwyqufv01o\""
						},
						{
							"key": "Content-Length",
							"value": "60"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 23:28:17 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Compilation failed: expected '}' at end of input\"\n}"
				}
			]
		},
		{
			"name": "Execute Code C++ with stdin ( No Authentication)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"#include <iostream>\\nusing namespace std;\\nint main() { int x; cout << \\\"Enter a number: \\\"; cin >> x; cout << \\\"You entered: \\\" << x << endl; return 0; }\",\r\n  \"input\": \"24\",\r\n  \"language\": \"cpp\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/execute",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"execute"
					]
				}
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"#include <iostream>\\nusing namespace std;\\nint main() { int x; cout << \\\"Enter a number: \\\"; cin >> x; cout << \\\"You entered: \\\" << x << endl; return 0; }\",\r\n  \"input\": \"24\",\r\n  \"language\": \"cpp\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/execute",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"execute"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "ETag",
							"value": "\"bkab9dtps718\""
						},
						{
							"key": "Content-Length",
							"value": "44"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sun, 03 Nov 2024 21:46:16 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"output\": \"Enter a number: You entered: 24\"\n}"
				}
			]
		}
	]
}